DECLARE @CONTACT_REFS TABLE (PERSON_ID INT, CONTACT_TYPE VARCHAR(10), CONTACT_VALUE VARCHAR(100), UPDATED_AT SMALLDATETIME)
INSERT INTO @CONTACT_REFS(PERSON_ID, CONTACT_TYPE, CONTACT_VALUE, UPDATED_AT)
VALUES
(1, 'PHONE', '555 123456', '2019-05-19'),
(1, 'EMAIL', 'person1@example.com', '2019-05-19'),
(1, 'PHONE', '555 000000', '2019-04-15'),
(1, 'PHONE', '555 999999', '2019-03-13'),
(1, 'EMAIL', 'an@old.email', '2019-04-02'),
(2, 'PHONE', '888 123456', '2019-05-19'),
(2, 'EMAIL', 'person2@example.com', '2019-05-19'),
(2, 'PHONE', '888 999999', '2019-03-13'),
(2, 'EMAIL', 'a2nd@old.email', '2019-04-02')

-- SELECT THE LAST GOOD EMAIL AND PHONE #
;WITH NUMBERED_CONTACTS AS (
	SELECT *, 
		   ROW_NUMBER() OVER(PARTITION BY PERSON_ID, CONTACT_TYPE ORDER BY UPDATED_AT DESC) AS N 
	FROM @CONTACT_REFS
)
SELECT PERSON_ID, CONTACT_TYPE, CONTACT_VALUE FROM NUMBERED_CONTACTS WHERE N=1

-- SHOW A REPORT OF THE LAST 3 PHONE NUMBERS ASSOCIATED WITH EACH PERSON IN TIME
SELECT PERSON_ID, [1] AS PHONE1,[2] AS PHONE2, [3] AS PHONE3
FROM (
	SELECT PERSON_ID, CONTACT_VALUE, DENSE_RANK() OVER (PARTITION BY PERSON_ID, CONTACT_TYPE ORDER BY UPDATED_AT DESC) AS NR
	FROM @CONTACT_REFS
	WHERE CONTACT_TYPE='PHONE'
) AS RANKED_CONTACTS
PIVOT (
	MIN(CONTACT_VALUE)
	FOR NR IN ([1], [2], [3])
) AS PVT
